"""Initial migration

Revision ID: fc899b721c89
Revises: 
Create Date: 2019-07-12 18:20:18.157328

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc899b721c89'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('standarised_name', sa.String(), nullable=False),
    sa.Column('reference_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('standarised_name')
    )
    op.create_table('book',
    sa.Column('doab_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('doab_id')
    )
    op.create_index('title_idx', 'book', ['title'], unique=False, postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_table('book_author',
    sa.Column('book_id', sa.String(), nullable=True),
    sa.Column('author_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.standarised_name'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.doab_id'], ),
    sa.UniqueConstraint('book_id', 'author_id', name='unique_book_author')
    )
    op.create_table('identifier',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('book_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.doab_id'], ),
    sa.PrimaryKeyConstraint('value')
    )
    op.create_table('reference',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('matched_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['matched_id'], ['book.doab_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_reference',
    sa.Column('book_id', sa.String(), nullable=True),
    sa.Column('reference_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.doab_id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.UniqueConstraint('book_id', 'reference_id', name='unique_book_reference')
    )
    op.create_table('parsed_reference',
    sa.Column('reference_id', sa.String(), nullable=False),
    sa.Column('raw_reference', sa.Text(), nullable=True),
    sa.Column('parser', sa.String(), nullable=True),
    sa.Column('authors', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('pages', sa.String(), nullable=True),
    sa.Column('journal', sa.String(), nullable=True),
    sa.Column('volume', sa.String(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('reference_id')
    )
    op.create_index('parse_ref_title_idx', 'parsed_reference', ['title'], unique=False, postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('parse_ref_title_idx', table_name='parsed_reference')
    op.drop_table('parsed_reference')
    op.drop_table('book_reference')
    op.drop_table('reference')
    op.drop_table('identifier')
    op.drop_table('book_author')
    op.drop_index('title_idx', table_name='book')
    op.drop_table('book')
    op.drop_table('author')
    # ### end Alembic commands ###
